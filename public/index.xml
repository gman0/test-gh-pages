<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on kcp @ Kubecon 2025 London</title>
    <link>http://localhost/</link>
    <description>Recent content in Introduction on kcp @ Kubecon 2025 London</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>00: Setting up your development environment</title>
      <link>http://localhost/docs/00-prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost/docs/00-prerequisites/</guid>
      <description>&lt;h1 id=&#34;pre-requisites&#34;&gt;&#xA;  Pre-requisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pre-requisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;In this chapter we&amp;rsquo;ll set up our workshop-dedicated development environment.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cloning-the-workshop-repo&#34;&gt;&#xA;  Cloning the workshop repo&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cloning-the-workshop-repo&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Start by cloning the git repository we&amp;rsquo;ll refer to throughout the workshop, and will be the place for the binaries, scripts and kubeconfigs we will create as we move forward.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone git@github.com:mjudeikis/kcp-contrib.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, let&amp;rsquo;s see what&amp;rsquo;s inside.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;00-prerequisites/&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;01-deploy-kcp/&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;02-explore-workspaces/&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;03-dynamic-providers/&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;clean-all.sh&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Notice the exercises in directories &lt;code&gt;&amp;lt;Sequence number&amp;gt;-&amp;lt;Exercise name&amp;gt;&lt;/code&gt;. These are to be visited in sequence, and to complete one, all previous exercises need to be completed first to bring the system into the desired state. While it&amp;rsquo;s best if you try to follow the tasks by yourself, if you ever get stuck, you can finish an exercise by running the scripts inside the respective exercise directory.&lt;/p&gt;</description>
    </item>
    <item>
      <title>01: Deploying kcp</title>
      <link>http://localhost/docs/01-deploy-kcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost/docs/01-deploy-kcp/</guid>
      <description>&lt;h1 id=&#34;deploy-kcp&#34;&gt;&#xA;  Deploy kcp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#deploy-kcp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;kcp may be deployed via a &lt;a href=&#34;https://github.com/kcp-dev/helm-charts&#34;&gt;Helm chart&lt;/a&gt;, an &lt;a href=&#34;https://github.com/kcp-dev/helm-charts&#34;&gt;operator&lt;/a&gt;, or as a standalone process running on the host. Each of them has its uses as well as advantages and disadvantages. While the most preferable way to deploy kcp is using its dedicated operator, for the sake of simplicity, we&amp;rsquo;ve taken the liberty of making the choice for you :) .&lt;/p&gt;&#xA;&lt;h2 id=&#34;starting-kcp-as-a-standalone-process&#34;&gt;&#xA;  Starting kcp as a standalone process&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#starting-kcp-as-a-standalone-process&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt;: during these exercises, we&amp;rsquo;ll be making heavy use of environment variables. We will be switching back and forth between clusters, as well as needing access to the binaries we&amp;rsquo;ve set up in the previous chapter. Whenever you see this block, it means we are switching an environment. Make sure you &lt;code&gt;cd&lt;/code&gt; into the workshop git repo, and copy-paste the commands to your terminal. Let&amp;rsquo;s give it a try!&lt;/p&gt;</description>
    </item>
    <item>
      <title>02: Exploring workspaces</title>
      <link>http://localhost/docs/02-explore-workspaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost/docs/02-explore-workspaces/</guid>
      <description>&lt;h1 id=&#34;explore-workspaces&#34;&gt;&#xA;  Explore workspaces&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#explore-workspaces&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Workspaces are one of kcp&amp;rsquo;s core concepts, and in this exercise we&amp;rsquo;ll explore what they are and how to work with them.&lt;/p&gt;&#xA;&lt;p&gt;See Workspaces documentation at &lt;a href=&#34;https://docs.kcp.io/kcp/main/concepts/workspaces/&#34;&gt;docs.kcp.io/kcp/main/concepts/workspaces/&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;pre-requisites-take-two&#34;&gt;&#xA;  Pre-requisites, take two&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pre-requisites-take-two&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Workspaces, or kcp for that matter, is not something that vanilla kubectl knows about. kcp brings support for those using &lt;a href=&#34;https://krew.sigs.k8s.io/&#34;&gt;krew&lt;/a&gt; plugins. You may remember, we installed kubect-krew in the very first warm-up exercise. Now we need to install the plugins themselves:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
